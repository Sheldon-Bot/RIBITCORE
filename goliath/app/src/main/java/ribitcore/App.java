/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ribitcore;

import com.diozero.api.DigitalOutputDevice;
import com.diozero.api.PinInfo;
import com.diozero.api.PwmOutputDevice;
import com.diozero.api.Servo;
import com.diozero.devices.PCA9685;
import com.diozero.devices.motor.DualMotor;
import com.diozero.internal.SoftwarePwmOutputDevice;
import com.diozero.internal.provider.pigpioj.PigpioJDeviceFactory;
import com.diozero.internal.provider.pigpioj.PigpioJI2CDevice;
import com.diozero.internal.provider.pigpioj.PigpioJPwmOutputDevice;
import com.diozero.internal.spi.BaseNativeDeviceFactory;
import com.diozero.internal.spi.DeviceFactoryInterface;
import com.diozero.internal.spi.PwmOutputDeviceInterface;
import com.diozero.sbc.BoardPinInfo;
import com.diozero.sbc.DeviceFactoryHelper;
import com.diozero.util.SleepUtil;
import org.checkerframework.checker.nullness.qual.NonNull;
import org.tinylog.Logger;
import uk.pigpioj.PigpioConstants;
import uk.pigpioj.PigpioInterface;
import uk.pigpioj.PigpioJ;

import java.io.IOException;
import java.io.OutputStream;
import java.util.Map;
import java.util.Optional;

public class App {

    public static final int LARGE_DELAY = 500;
    public static final int SHORT_DELAY = 10;

    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        int pin = 24;
        try (PigpioInterface pigpio_impl = PigpioJ.getImplementation()) {
            int version = pigpio_impl.getVersion();
            System.out.println("version: " + version);
            if (version < 0) {
                throw new IOException("Error in pigpio_impl.initialise()");
            }

            int rc = pigpio_impl.setMode(pin, PigpioConstants.MODE_PI_OUTPUT);
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setMode()");
            }

            int pwm_max = 255;

            System.out.println("pwm full on");
            rc = pigpio_impl.setPWMDutyCycle(pin, pwm_max);
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setPWMDutyCycle()");
            }
            Thread.sleep(500);

            System.out.println("pwm full off");
            rc = pigpio_impl.setPWMDutyCycle(pin, 0);
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setPWMDutyCycle()");
            }
            Thread.sleep(500);

            System.out.println("pwm 25% off");
            rc = pigpio_impl.setPWMDutyCycle(pin, Math.round(pwm_max * .25f));
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setPWMDutyCycle()");
            }
            Thread.sleep(500);

            System.out.println("pwm 50%");
            rc = pigpio_impl.setPWMDutyCycle(pin, Math.round(pwm_max * .50f));
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setPWMDutyCycle()");
            }
            Thread.sleep(500);

            System.out.println("pwm 75%");
            rc = pigpio_impl.setPWMDutyCycle(pin, Math.round(pwm_max * .75f));
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setPWMDutyCycle()");
            }
            Thread.sleep(500);

            System.out.println("pwm full off");
            rc = pigpio_impl.setPWMDutyCycle(pin, 0);
            if (rc < 0) {
                throw new IOException("Error in pigpio_impl.setPWMDutyCycle()");
            }
            Thread.sleep(500);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
            {
            }

//    public static void main(String[] args) {
//        System.out.println(new App().getGreeting());
//
//        final @NonNull DeviceFactoryInterface factory = new PigpioJDeviceFactory();
//
//        @NonNull PinInfo pinInfo;
//        try {
//            pinInfo = factory.getBoardPinInfo().getByGpioNumberOrThrow(24);
//        } catch (Exception e) {
//            System.out.println("Failed to initialize.");
//            e.printStackTrace();
//            return;
//        }
//
//        final @NonNull PigpioInterface impl = PigpioJ.getImplementation();
//
//        final @NonNull PigpioJPwmOutputDevice device = new PigpioJPwmOutputDevice(factory.createPinKey(pinInfo), factory, impl, 24, 50, 2);
//
//        float angle = 0;
//
//        for (; ; ) {
//            angle += 0.001;
//            device.setValue(angle);
//
//            SleepUtil.sleepMillis(100);
//
//            System.out.println(angle);
//            System.out.println(device.getValue());
//
//            if (angle > 0.9) {
//                angle = 0;
//            }
//        }
//    }
        }
    }
}